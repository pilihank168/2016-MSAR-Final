function wave=notePlay(note, timeUnit, method, plotOpt)
%notePlay: Play a music note vector
%	Usage: wave=notePlay(note, timeUnit, method, plotOpt)
%		note: music note vector, with two possible formats:
%			Format 1:
%				note.pitch: pitch in semitones, where zero/nan is considered as silence
%				note.duration: duration in timeUnit (default to be 1/64 seconds)
%			Format 2:
%				note = [pitch1, duration1, pitch2, duration2, ...], where duration in timeUnit (default to be 1/64 seconds)
%		method: method for generating the wave signals
%			method=1 ===> Smooth pitch generated by note2waveMex.dll
%			method=2 ===> Discrete pitch
%			method=3 ===> Discrete pitch by the PC speaker
%		plotOpt: 1 for plotting (only for method = 1 & 2)
%
%	Example:
%		pitch=[55 55 55 55 57 55 0 57 60 0 64 0 62 62 62 62 60 64 60 0 57 55 55];
%		duration=[23 23 23 23 23 35 9 23 69 18 69 18 23 23 23 12 12 23 35 9 12 12 127];	% Unit: 1/64 sec
%		note=[pitch; duration]; note=note(:)';
%		timeUnit=1/64;
%		method=1;
%		plotOpt=1;
%		notePlay(note, timeUnit, method, plotOpt);

%	Roger Jang, 20060303, 20070531

if nargin<1, selfdemo; return; end
if nargin<2, timeUnit=1/64; end
if nargin<3, method=1; end
if nargin<4, plotOpt=0; end

note=double(note);
switch (method)
	case 1
		fs=16000;
		wave=note2wave(note, timeUnit, fs, method, plotOpt);
		sound(wave, fs);
	case 2
		fs=16000;
		wave=note2wave(note, timeUnit, fs, method, plotOpt);
		sound(wave, fs);
	case 3
		if isstruct(note)
			pitch=[note.pitch];
			duration=[note.duration]*timeUnit;
			note=[pitch; duration]; note=note(:);
		end
		note = double(note);
		note(2:2:end) = note(2:2:end)*1000;		% the time unit used in notePlayMex is 1/1000 second.
		notePlayMex(double(note));			% playback using the builtin speaker. by Vincent Gao
		%notePlay2mex(double(note));			% playback using the sound card. by Wenny Cheng
	otherwise
		fprintf('Unknown method in notePlay.m!\n');
end

% ====== Self demo
function selfdemo
pitch=[55 55 55 55 57 55 0 57 60 0 64 0 62 62 62 62 60 64 60 0 57 55 55]+12;
duration=[23 23 23 23 23 35 9 23 69 18 69 18 23 23 23 12 12 23 35 9 12 12 127];
note=[pitch; duration]; note=note(:)';
timeUnit=1/64;
fprintf('Using method 1 in notePlay.m. Hit return to start...'); pause; fprintf('\n');
method=1; notePlay(note, timeUnit, method);
fprintf('Using method 2 in notePlay.m. Hit return to start...'); pause; fprintf('\n');
method=2; notePlay(note, timeUnit, method);
%fprintf('Using method 3 in notePlay.m. Hit return to start...'); pause; fprintf('\n');
%method=3; notePlay(note, timeUnit, method);